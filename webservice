#!/usr/bin/python3

import tornado.httpserver
import tornado.routing
import tornado.ioloop
import tornado.web

import logging
import logging.handlers
from tornado.log import enable_pretty_logging
from tornado.options import define, options

import importlib
import os

if __name__ == "__main__":
	define("syslog_path", default="/dev/log")
	define("available_sites", default=[])
	define("host_address", default="127.0.0.1")
	define("host_port", default=4000)
	options.parse_config_file("./webservice.cfg")

	enable_pretty_logging()
	logger = logging.getLogger(__name__)
	logger.setLevel(logging.DEBUG)

	syslog_format = "%(name)s:%(levelname)s [%(pathname)s.%(funcName)s:%(lineno)d] %(message)s"
	syslog_formatter = logging.Formatter(syslog_format)
	syslog_handler = logging.handlers.SysLogHandler(address = options.syslog_path)
	syslog_handler.setLevel(logging.DEBUG)
	syslog_handler.setFormatter(syslog_formatter)
	logger.addHandler(syslog_handler)

	access_logger = logging.getLogger("tornado.access")
	access_logger.setLevel(logging.DEBUG)
	access_logger.addHandler(syslog_handler)

	app_logger = logging.getLogger("tornado.application")
	app_logger.setLevel(logging.DEBUG)
	app_logger.addHandler(syslog_handler)

	gen_logger = logging.getLogger("tornado.general")
	gen_logger.setLevel(logging.DEBUG)
	gen_logger.addHandler(syslog_handler)

	ioloop = tornado.ioloop.IOLoop.current()

	site_rules = []
	for site in options.available_sites:
		site_domain = site[0]
		site_path = site[1]

		site_lib = site_path
		site_lib += "libs/service"
		site_lib = site_lib.replace("/", ".")

		module = importlib.import_module(site_lib)

		pages = site_path
		pages += "pages/"
		site_pages = os.path.join(os.path.dirname(__file__), pages)

		app = module.create(logger, site_pages)

		site_rule = tornado.routing.Rule(tornado.routing.HostMatches(site_domain), app)
		site_rules.append(site_rule)

	site_router = tornado.routing.RuleRouter(site_rules)

	service = tornado.httpserver.HTTPServer(site_router, xheaders=True)
	service.listen(options.host_port, options.host_address)

	logger.info("Service has started.")

	ioloop.start()

